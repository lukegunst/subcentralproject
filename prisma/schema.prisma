generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String             @id @default(cuid())
  name          String?
  email         String             @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  businessName  String?
  role          String             @default("USER")
  accounts      Account[]
  plans         Plan[]
  sessions      Session[]
  subscriptions UserSubscription[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Plan {
  id            String             @id @default(cuid())
  name          String
  description   String?
  price         Float
  interval      String
  merchantId    String
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  merchant      User               @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  subscriptions UserSubscription[]
}

model UserSubscription {
  id        String   @id @default(cuid())
  userId    String
  planId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String   @default("active")
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, planId])
}
